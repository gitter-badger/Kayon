/*
 * Kayon
 * Copyright (C) 2015 Ruben Anders
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

apply from: 'javadocAndSourcesJar.gradle'

group 'cf.kayon'
version = file('src/main/resources/version').getText('utf8').replaceAll("[\n\r]", "") // eliminate newlines
mainClassName = 'cf.kayon.gui.splash.Splash'


if (System.getenv('CIRCLECI').equals('true')) {
    file('src/main/resources/build').write(System.getenv('CIRCLE_BUILD_NUM'))

    def versionForFiles = project.version + '-b' + System.getenv('CIRCLE_BUILD_NUM')

    tasks.withType(Jar) {
        version = versionForFiles
    }
    tasks.withType(Zip) {
        version = versionForFiles
    }
    tasks.withType(Tar) {
        version = versionForFiles
    }
}

buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
    }
}

//region Dependency Management
repositories {
    maven { url  "http://dl.bintray.com/randers00/intellijannotations" }
    jcenter()
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'org.apache.commons:commons-collections4:4.0' // ObjectArrayIterator
    compile 'com.intellij:annotations:15.0'
    compile "com.google.guava:guava:18.0" // Change version in doc link as well
    compile 'org.apache.commons:commons-lang3:3.4' // Pair & Triple
    compile 'commons-io:commons-io:2.4'
    compile 'com.h2database:h2:1.4.190'
//    compile fileTree(dir: 'libs', include: '*.jar')

    // Tests
    testCompile 'junit:junit:4.7'
    testCompile 'com.github.stefanbirkner:fishbowl:1.3.0'
}
//endregion

//region utf8
tasks.withType(JavaCompile) {
    options.encoding = 'utf8'
}

tasks.run {
    workingDir "$buildDir/run-dir/"
    doFirst {
        workingDir.mkdirs()
    }
}

String buildOptionsString(String... links) {
    StringBuilder stringBuilder = new StringBuilder(links.length * 32)
    for (int i = 0; i < links.length; i++) {
        stringBuilder.append(links[i])
        if (i + 1 < links.length)
            stringBuilder.append("' -link '")
    }
    return stringBuilder.toString()
}

tasks.javadoc {
    options.addStringOption('link', buildOptionsString('https://cdn.rawgit.com/google/guava/gh-pages/_releases/18.0/api/docs/',
            'https://docs.oracle.com/javase/8/docs/api/'))
    options.addStringOption('encoding', 'utf8')
    options.addStringOption('docencoding', 'utf8')
    options.addStringOption('charset', 'utf8')
    options.showFromPrivate()
//    options.setOutputLevel(JavadocOutputLevel.VERBOSE)
}
//endregion

tasks.withType(Test) {
    workingDir = "$buildDir/test-results/working-dir"
    systemProperty 'file.encoding', 'utf8'
    doFirst {
        workingDir.mkdirs()
    }
}

task copyCIArtifacts(type: Copy) << {
    from "$buildDir/libs/"
    from "$buildDir/distributions/"
    into System.getenv('CIRCLE_ARTIFACTS')
}

defaultTasks 'clean', 'jar', 'javadocJar', 'sourcesJar', 'shadowJar', 'distZip'
